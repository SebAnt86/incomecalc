{"version":3,"sources":["components/govTables.js","components/Form.js","components/incomeCalc.js","components/Result.js","components/Footer.js","App.js","index.js"],"names":["userCategories","catID","catName","maxPayment","incomeLimit","bracketOne","bracketTwo","partnerLimit","partnerBracket","combinedLimit","useStyles","makeStyles","theme","formControl","minWidth","maxWidth","selectEmpty","marginTop","spacing","Form","props","setResult","useState","hoursWorked","setHoursWorked","hourRate","setHourRate","userCategory","setUserCategory","partnerIncome","setPartnerIncome","timePeriod","setTimePeriod","partnerDisp","setPartnerDisp","hoursValid","setHoursValid","rateValid","setRateValid","partnerValid","setPartnerValid","hoursWorkBool","hourRateBool","partnerIncomeWarningBool","classes","Container","className","onSubmit","evt","preventDefault","console","log","finalCalc","userRate","userHours","workIncomeTotal","Number","deductions","totalIncome","averageWage","Math","round","finalGovPay","toFixed","maxGovPayment","workHours","incomeCalc","FormGroup","mx","xs","Box","mt","FormControl","variant","InputLabel","id","Select","labelId","value","onChange","e","target","label","required","MenuItem","TextField","type","InputLabelProps","shrink","placeholder","FormHelperText","component","display","flexDirection","justifyContent","Button","size","my","color","onClick","table","minHeight","Result","result","workedHours","TableContainer","Paper","Typography","Table","TableBody","TableRow","TableCell","fontWeight","align","fontSize","Footer","px","py","sm","textAlign","pb","Date","getFullYear","App","gutterBottom","flexWrap","alignItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6ea3892.chunk.js","sourcesContent":["\r\n/// all \r\n\r\nexport const userCategories = [\r\n    {\r\n        catID: \"S1\",\r\n        catName : 'Single, no children',\r\n        maxPayment : 620.80,\r\n        incomeLimit: 1217.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60, // 1000 600 deduce\r\n    },\r\n      {\r\n        catID: \"S2\",\r\n        catName : 'Single,  NOT the principal carer of a dependent child or children',\r\n        maxPayment : 667.50,\r\n        incomeLimit: 1296.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"S3\",\r\n        catName : 'Single, 60 or older, after 9 continuous months on payment',\r\n        maxPayment : 667.50,\r\n        incomeLimit: 1306.34,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"S4\",\r\n        catName : 'Single,  principal carer of a dependent child or children',\r\n        maxPayment : 667.50,\r\n        incomeLimit: 1858.00,\r\n        bracketOne : .40,  \r\n        bracketTwo : .40, // 1000 400 deduced \r\n    },\r\n    {\r\n        catID: \"S5\",\r\n        catName : 'Single principal carer granted an exemption',\r\n        maxPayment : 850.20,\r\n        incomeLimit: 2321.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"P1\",\r\n        catName : 'Partnered',\r\n        maxPayment : 565.40,\r\n        incomeLimit: 1123.17,\r\n        partnerLimit: 2079.50,        \r\n        partnerBracket : 1124.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"P2\",\r\n        catName : 'Partnered, Partner with pension',\r\n        maxPayment : 565.40,\r\n        incomeLimit: 1123.17,\r\n        partnerLimit: 2079.50,        \r\n        combinedLimit: 2246.34,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n];\r\n\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { incomeCalc } from \"./incomeCalc\";\r\nimport { userCategories } from \"./govTables.js\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    // margin: theme.spacing(1),\r\n    minWidth: 300,\r\n    maxWidth: 300,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport function Form(props) {\r\n  const { setResult } = props;\r\n\r\n  // form fields states\r\n  const [hoursWorked, setHoursWorked] = useState(\"\");\r\n  const [hourRate, setHourRate] = useState(\"\");\r\n  const [userCategory, setUserCategory] = useState(\"\");\r\n  const [partnerIncome, setPartnerIncome] = useState(\"\");\r\n  const [timePeriod, setTimePeriod] = useState(\"weekly\");\r\n  const [partnerDisp, setPartnerDisp] = useState(\"none\");\r\n\r\n  // validation states\r\n  const [hoursValid, setHoursValid] = useState(\"none\");\r\n  const [rateValid, setRateValid] = useState(\"none\");\r\n  const [partnerValid, setPartnerValid] = useState(\"none\");\r\n\r\n  let hoursWorkBool = false;\r\n  let hourRateBool = false;\r\n  let partnerIncomeWarningBool = true;\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    // validation for the hours worked input\r\n    if (hoursWorked < 1) {\r\n        console.log(hoursWorked)\r\n      setHoursValid(\"block\");\r\n      hoursWorkBool = false;\r\n    } else {\r\n      setHoursValid(\"none\");\r\n      hoursWorkBool = true;\r\n    }\r\n\r\n    // validation for the hours rate input\r\n    if (hourRate < 1) {\r\n      setRateValid(\"block\");\r\n      hourRateBool = false;\r\n    } else {\r\n      setRateValid(\"none\");\r\n      hourRateBool = true;\r\n    }\r\n\r\n    // validation for the partner income\r\n    if (userCategory === 5 || userCategory === 6) {\r\n      partnerIncomeWarningBool = false;\r\n      if (partnerIncome < 1) {\r\n        setPartnerValid(\"block\");\r\n        partnerIncomeWarningBool = false;\r\n      } else {\r\n        setPartnerValid(\"none\");\r\n        partnerIncomeWarningBool = true;\r\n      }\r\n    }\r\n\r\n    //check if all the required fields are vilid before strating the calculation\r\n    if (hoursWorkBool && hourRateBool && partnerIncomeWarningBool) {\r\n      const finalCalc = incomeCalc(\r\n        hourRate,\r\n        hoursWorked,\r\n        userCategories[userCategory],\r\n        partnerIncome,\r\n        timePeriod\r\n      );\r\n\r\n      setResult(finalCalc);\r\n    }\r\n  };\r\n\r\n  // function to reset the form's fields\r\n  const formReset = () => {\r\n    // reset fields\r\n    setUserCategory(\"\");\r\n    setHoursWorked(\"\");\r\n    setHourRate(\"\");\r\n    setPartnerIncome(\"\");\r\n    setTimePeriod(\"weekly\");\r\n\r\n    // reset the warning spans\r\n    setHoursValid(\"none\");\r\n    setRateValid(\"none\");\r\n    setPartnerValid(\"none\");\r\n    setPartnerDisp(\"none\");\r\n\r\n    // reset the result's values\r\n    let resetValues = {\r\n      workHours: 0,\r\n      workIncomeTotal: 0,\r\n      maxGovPayment: 0,\r\n      deductions: 0,\r\n      finalGovPay: 0,\r\n      totalIncome: 0,\r\n    };\r\n\r\n    setResult(resetValues);\r\n  };\r\n\r\n  // function to handle the category\r\n  const handleChangeCategory = (e) => {\r\n    setUserCategory(e.target.value);\r\n\r\n    // show the Partner income field when one of the partner options are selected\r\n    if (e.target.value === 5 || e.target.value === 6) {\r\n      setPartnerDisp(\"block\");\r\n    } else {\r\n      setPartnerDisp(\"none\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"md\" className=\"form-container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <FormGroup mx={{xs: 3}}>\r\n            <Box mt={{ xs: 3 }}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"time_period-label\">Time Period</InputLabel>\r\n                <Select\r\n                  labelId=\"time_period-label\"\r\n                  id=\"time_period\"\r\n                  value={timePeriod}\r\n                  onChange={(e) => setTimePeriod(e.target.value)}\r\n                  label=\"Time Period\"\r\n                  required\r\n                >\r\n                  <MenuItem value={\"weekly\"}>Weekly</MenuItem>\r\n                  <MenuItem value={\"fortnightly\"}>Fortnightly</MenuItem>\r\n                  <MenuItem value={\"monthly\"}>Monthly</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n\r\n            <Box mt={{ xs: 3 }}>\r\n              <TextField\r\n                label=\"Hours Worked\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                placeholder=\"e.g. 20\"\r\n                value={hoursWorked}\r\n                onChange={(e) => setHoursWorked(e.target.value)}\r\n                required\r\n                className={classes.formControl}\r\n              />\r\n              <FormHelperText>Required</FormHelperText>\r\n              <Box component=\"p\" display={hoursValid} mt={{ xs: -1 }}>\r\n                <FormHelperText className=\"validation\">\r\n                  Please provide a positive number.\r\n                </FormHelperText>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box mt={{ xs: 3 }}>\r\n              <TextField\r\n                label=\"Hourly Rate\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                placeholder=\"e.g. 20.33\"\r\n                value={hourRate}\r\n                onChange={(e) => setHourRate(e.target.value)}\r\n                required\r\n                className={classes.formControl}\r\n              />\r\n              <FormHelperText>Required</FormHelperText>\r\n              <Box component=\"p\" display={rateValid} mt={{ xs: -1 }}>\r\n                <FormHelperText className=\"validation\">\r\n                  Please provide a positive number.\r\n                </FormHelperText>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box mt={{ xs: 3 }} component=\"div\" display={partnerDisp}>\r\n              <TextField\r\n                label=\"Partner Income\"\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                placeholder=\"e.g. 800\"\r\n                value={partnerIncome}\r\n                onChange={(e) => setPartnerIncome(e.target.value)}\r\n                className={classes.formControl}\r\n              />\r\n              <FormHelperText>Required</FormHelperText>\r\n              <Box component=\"p\" display={partnerValid} mt={{ xs: -1 }}>\r\n                <FormHelperText className=\"validation\">\r\n                  Please provide a positive number.\r\n                </FormHelperText>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box mt={{ xs: 3 }}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"user-category-label\">User Category</InputLabel>\r\n                <Select\r\n                  labelId=\"user-category-label\"\r\n                  value={userCategory}\r\n                  onChange={handleChangeCategory}\r\n                  label=\"User Category\"\r\n                  required\r\n                >\r\n                  <MenuItem value={0}>Single, no children</MenuItem>\r\n                  <MenuItem value={1}>\r\n                    Single, NOT the principal carer of a dependent child or\r\n                    children\r\n                  </MenuItem>\r\n                  <MenuItem value={2}>\r\n                    Single, 60 or older, after 9 continuous months on payment\r\n                  </MenuItem>\r\n                  <MenuItem value={3}>\r\n                    Single, principal carer of a dependent child or children\r\n                  </MenuItem>\r\n                  <MenuItem value={4}>\r\n                    Single principal carer granted an exemption\r\n                  </MenuItem>\r\n                  <MenuItem value={5}>Partnered</MenuItem>\r\n                  <MenuItem value={6}>Partnered, Partner with pension</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Please select a category</FormHelperText>\r\n              </FormControl>\r\n            </Box>\r\n\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"center\"\r\n              mt={{ xs: 3 }}\r\n            >\r\n              <Button\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n              >\r\n                Calculate\r\n              </Button>\r\n            </Box>\r\n\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"center\"\r\n              my={{ xs: 3 }}\r\n            >\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={formReset} size=\"small\">\r\n                Reset\r\n              </Button>\r\n            </Box>\r\n          </FormGroup>\r\n        </form>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","\r\n\r\nexport const incomeCalc = (userRate, userHours =1, userCategories, partnerIncome =0, timePeriod) => {\r\n\r\n//all the calculation are made fortnightly. At the end of the function the values are multiplied in case of different timePeriod\r\n  let bracketOne = userCategories.bracketOne;\r\n  let bracketTwo = userCategories.bracketTwo;\r\n  let incomeLimit = (userCategories.incomeLimit );\r\n  let combinedLimit = (userCategories.combinedLimit);\r\n  let partnerLimit = (userCategories.partnerLimit);\r\n  let maxPayment = (userCategories.maxPayment);\r\n\r\n  if(timePeriod === \"weekly\"){\r\n    userHours *= 2;\r\n  } else if (timePeriod === \"monthly\"){\r\n    userHours /= 2.16;\r\n  }\r\n\r\n  // variables to be returned:\r\n  let workIncomeTotal = Number(userRate * userHours);\r\n  let deductions = 0;\r\n\r\n  let threshold1 = 0; // how much money he made between 150 to 256\r\n  let threshold2 = 0; // between 256 to max\r\n\r\n  if (workIncomeTotal > incomeLimit || // user exceeds limit\r\n    partnerIncome > partnerLimit || // partner exceeds limit\r\n    (workIncomeTotal+partnerIncome > combinedLimit) // combined exceeds limit\r\n    ) { \r\n    deductions = maxPayment;\r\n  } else if (workIncomeTotal < incomeLimit) {\r\n      // deduction from 0 to 150\r\n    if (workIncomeTotal < 150) {\r\n      deductions = 0;\r\n    } else if (workIncomeTotal > 150 && workIncomeTotal < 257) {\r\n      // deduction from 150 to 256\r\n      threshold1 = ((workIncomeTotal - 150) * bracketOne); // how much money he made between 150 to 256\r\n      deductions = threshold1;\r\n    } else if (workIncomeTotal > 256 && workIncomeTotal < incomeLimit) {\r\n      // deduction from 256 to incomeLimit\r\n      threshold2 = ((workIncomeTotal - 150 - 106) * bracketTwo);\r\n      deductions = (106 * bracketOne) + threshold2;\r\n    }\r\n    if(partnerIncome > 1124){\r\n      deductions =+ ((partnerIncome-1124)* .60);\r\n    };\r\n  }\r\n  let totalIncome = (workIncomeTotal + maxPayment - deductions);\r\n      \r\n  let averageWage = Math.round(totalIncome/userHours);\r\n  let finalGovPay= maxPayment - deductions;\r\n\r\n  //check the timePeriod and multiply the results in that case \r\n  // if(timePeriod === \"weekly\"){\r\n  //   totalIncome *= 2;\r\n  //   workIncomeTotal *= 2;\r\n  //   deductions *= 2;\r\n  //   maxPayment *= 2; \r\n  //   averageWage *= 2;\r\n  //   finalGovPay *= 2;\r\n  //   userHours *= 2;\r\n  // }\r\n  // if (timePeriod === \"monthly\"){\r\n  //   totalIncome *= 4.33;\r\n  //   workIncomeTotal *= 4.33;\r\n  //   deductions *= 4.33;\r\n  //   maxPayment *= 4.33; \r\n  //   averageWage *= 4.33;\r\n  //   finalGovPay *= 4.33;\r\n  //   userHours *= 4.33;\r\n  // }\r\n\r\n  let calculatedDisplay = {\r\n    totalIncome : totalIncome.toFixed(2),\r\n    workIncomeTotal : workIncomeTotal.toFixed(2),\r\n    deductions : deductions.toFixed(2),\r\n    maxGovPayment: maxPayment.toFixed(2),\r\n    averageWage,\r\n    finalGovPay :finalGovPay.toFixed(2),\r\n    workHours : userHours,\r\n    timePeriod\r\n  };\r\n\r\n  return calculatedDisplay;\r\n};\r\n","import React from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\n// import TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 300,\r\n    minHeight: 400, \r\n  },\r\n});\r\n\r\nfunction Result(props) {\r\n  const { result } = props;\r\n  const classes = useStyles();\r\n  const workIncomeTotal = result.workIncomeTotal ? result.workIncomeTotal : 0;\r\n  let workedHours = result.workHours ? result.workHours : 0;\r\n  const maxGovPayment = result.maxGovPayment ? result.maxGovPayment : 0;\r\n  const deductions = result.deductions ? result.deductions : 0;\r\n  const finalGovPay = result.finalGovPay ? result.finalGovPay : 0;\r\n  const totalIncome = result.totalIncome ? result.totalIncome : 0;\r\n\r\n  if (result.timePeriod === \"monthly\") {\r\n    workedHours = workedHours.toFixed(2);\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <Container maxWidth=\"md\">\r\n        <TableContainer component={Paper} maxWidth=\"md\">\r\n        <Typography variant=\"h6\" className=\"table-head\">FORTNIGHTLY RESULTS</Typography>\r\n          <Table aria-label=\"customized table\">\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell className=\"table-style\">\r\n                  Income from working <Box component=\"span\" fontWeight=\"fontWeightBold\" >{workedHours}</Box> hours is:\r\n                </TableCell>\r\n                <TableCell className=\"table-style\" align=\"right\"><Box component=\"span\" fontWeight=\"fontWeightBold\" >${workIncomeTotal}</Box></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell className=\"table-style\">\r\n                  The goverment max payment you could receive was:\r\n                </TableCell>\r\n                <TableCell className=\"table-style\" align=\"right\"><Box component=\"span\" fontWeight=\"fontWeightBold\">${maxGovPayment}</Box></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell className=\"table-style\" >\r\n                  The goverment payment has been deducted by:\r\n                </TableCell>\r\n                <TableCell className=\"table-style\" align=\"right\"><Box component=\"span\" fontWeight=\"fontWeightBold\" >${deductions}</Box></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell className=\"table-style\" >Final goverment payment received:</TableCell>\r\n                <TableCell className=\"table-style\" align=\"right\"><Box component=\"span\" fontWeight=\"fontWeightBold\" >${finalGovPay}</Box></TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell><Box component=\"span\" fontWeight=\"fontWeightBold\" fontSize={18}>You total fortnightly income is:</Box></TableCell>\r\n                <TableCell><Box component=\"span\" fontWeight=\"fontWeightBold\" fontSize={18}>${totalIncome}</Box></TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n\r\nfunction Footer() {\r\n  return (\r\n   <footer>\r\n      <Box className=\"footer-style\"  color=\"white\">\r\n        <Container maxWidth=\"lg\">\r\n          <Box px={3} py={{xs:3, sm:6}} className=\"disclosure\" textAlign=\"justify\">\r\n            The content of this website is provided for informational purposes\r\n            only. It does not constitute legal advice and should not be relied\r\n            upon as such. Please seek legal advice for any particular matters\r\n            you have. Whilst we have taken all due care to provide correct\r\n            information, the creators of this website do not accept any\r\n            liability to anyone in relation to the use of, or reliance on, the\r\n            information provided on this website.\r\n          </Box>\r\n          <Box textAlign=\"center\" pb={3}>\r\n             Centerlink Income Calculator &reg; {new Date().getFullYear()}\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </footer> \r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\n","import React, { useState } from \"react\";\r\nimport Form from \"./components/Form\";\r\nimport Result from \"./components/Result\";\r\nimport Footer from \"./components/Footer\";\r\nimport \"./index.css\";\r\n\r\nimport \"@fontsource/roboto\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n//import Container from \"@material-ui/core/Container\";\r\n\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState({});\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"center\">\r\n        <Typography variant=\"h4\" gutterBottom className=\"heading\">\r\n          CENTERLINK INCOME CALCULATOR\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Box className=\"main-container\">\r\n        <Box className=\"centerbox\"\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          flexWrap=\"wrap\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"start\"\r\n        >\r\n          <Box xs={12} sm={6} mx={{ sm: 3 }} my={{xs:3}} className=\"formbox\">\r\n            <Form setResult={setResult} />\r\n          </Box>\r\n          <Box xs={12} sm={6} mt={{ xs: 5}} my={{xs:3}}>\r\n            <Result result={result} />\r\n          </Box>\r\n        </Box>\r\n        <Footer />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}