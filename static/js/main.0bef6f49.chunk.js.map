{"version":3,"sources":["components/govTables.js","components/Form.js","components/incomeCalc.js","components/Result.js","components/Footer.js","App.js","index.js"],"names":["userCategories","catID","catName","maxPayment","incomeLimit","bracketOne","bracketTwo","partnerLimit","partnerBracket","combinedLimit","Form","props","setResult","useState","hoursWorked","setHoursWorked","hourRate","setHourRate","userCategory","setUserCategory","partnerIncome","setPartnerIncome","timePeriod","setTimePeriod","hiddenField","document","getElementById","selectField","hoursWorkWarning","hoursWorkBool","hourRateWarning","hourRateBool","userCategoryWarning","userCategoryWarningBool","partnerIncomeWarning","partnerIncomeWarningBool","className","onSubmit","evt","preventDefault","style","display","includes","finalCalc","userRate","userHours","workIncomeTotal","Number","deductions","totalIncome","averageWage","Math","round","finalGovPay","toFixed","maxGovPayment","workHours","incomeCalc","id","value","onChange","e","target","type","placeholder","required","Button","variant","onClick","Result","result","monthlyHours","Table","TableBody","TableRow","TableCell","align","Footer","App","ReactDOM","render","StrictMode"],"mappings":"0LAGaA,EAAiB,CAC1B,CACIC,MAAO,KACPC,QAAU,sBACVC,WAAa,MACbC,YAAa,KACbC,WAAa,GACbC,WAAa,IAEf,CACEL,MAAO,KACPC,QAAU,oEACVC,WAAa,MACbC,YAAa,KACbC,WAAa,GACbC,WAAa,IAEjB,CACIL,MAAO,KACPC,QAAU,4DACVC,WAAa,MACbC,YAAa,QACbC,WAAa,GACbC,WAAa,IAEjB,CACIL,MAAO,KACPC,QAAU,4DACVC,WAAa,MACbC,YAAa,KACbC,WAAa,GACbC,WAAa,IAEjB,CACIL,MAAO,KACPC,QAAU,8CACVC,WAAa,MACbC,YAAa,KACbC,WAAa,GACbC,WAAa,IAEjB,CACIL,MAAO,KACPC,QAAU,YACVC,WAAa,MACbC,YAAa,QACbG,aAAc,OACdC,eAAiB,KACjBH,WAAa,GACbC,WAAa,IAEjB,CACIL,MAAO,KACPC,QAAU,kCACVC,WAAa,MACbC,YAAa,QACbG,aAAc,OACdE,cAAe,QACfJ,WAAa,GACbC,WAAa,K,eCoKNI,MA3NR,SAAcC,GACnB,IAAQC,EAAcD,EAAdC,UACR,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAA0CN,mBAAS,IAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KACA,EAAoCR,mBAAS,UAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEMC,EAAcC,SAASC,eAAe,eACtCC,EAAcF,SAASC,eAAe,eAEtCE,EAAmBH,SAASC,eAAe,oBAC7CG,GAAgB,EACdC,EAAkBL,SAASC,eAAe,mBAC5CK,GAAe,EACbC,EAAsBP,SAASC,eAAe,uBAChDO,GAA0B,EACxBC,EAAuBT,SAASC,eAAe,wBACjDS,GAA2B,EAmG/B,OACE,qBAAKC,UAAU,OAAf,SACA,sBAAMC,SAnGa,SAACC,GACpBA,EAAIC,iBAGDzB,EAAc,GACbc,EAAiBY,MAAMC,QAAU,QACjCZ,GAAgB,IAEhBD,EAAiBY,MAAMC,QAAU,OACjCZ,GAAgB,GAIfb,EAAW,GACZc,EAAgBU,MAAMC,QAAU,QAChCV,GAAe,IAEfD,EAAgBU,MAAMC,QAAU,OAChCV,GAAe,GA2BnB,GAvBuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEvBW,SAASxB,IAIxBc,EAAoBQ,MAAMC,QAAU,OACpCR,GAA0B,IAJ1BD,EAAoBQ,MAAMC,QAAU,QACpCR,GAA0B,GAOP,IAAjBf,GAAuC,IAAjBA,IACvBiB,GAA2B,EACxBf,EAAgB,GAChBc,EAAqBM,MAAMC,QAAU,QACrCN,GAA2B,IAE3BD,EAAqBM,MAAMC,QAAU,OACrCN,GAA2B,IAKhCN,GAAiBE,GAAgBE,GAA2BE,EAAyB,CACpF,IAAMQ,ECtEY,SAACC,GAA0E,IAAhEC,EAA+D,uDAApD,EAAG7C,EAAiD,uCAAjCoB,EAAiC,uDAAlB,EAAGE,EAAe,uCAG9FjB,EAAaL,EAAeK,WAC5BC,EAAaN,EAAeM,WAC5BF,EAAeJ,EAAeI,YAC9BK,EAAiBT,EAAeS,cAChCF,EAAgBP,EAAeO,aAC/BJ,EAAcH,EAAeG,WAEf,WAAfmB,EACDuB,GAAa,EACW,YAAfvB,IACTuB,GAAa,MAIf,IAAIC,EAAkBC,OAAOH,EAAWC,GACpCG,EAAa,EAKbF,EAAkB1C,GACpBgB,EAAgBb,GACfuC,EAAgB1B,EAAgBX,EAEjCuC,EAAa7C,EACJ2C,EAAkB1C,IAEvB0C,EAAkB,IACpBE,EAAa,EACJF,EAAkB,KAAOA,EAAkB,IAGpDE,GADeF,EAAkB,KAAOzC,EAE/ByC,EAAkB,KAAOA,EAAkB1C,IAGpD4C,EAAc,IAAM3C,GADLyC,EAAkB,IAAM,KAAOxC,GAG7Cc,EAAgB,OACjB4B,EAAqC,IAArB5B,EAAc,QAGlC,IAAI6B,EAAeH,EAAkB3C,EAAa6C,EAE9CE,EAAcC,KAAKC,MAAMH,EAAYJ,GACrCQ,EAAalD,EAAa6C,EAgC9B,MAVwB,CACtBC,YAAcA,EAAYK,QAAQ,GAClCR,gBAAkBA,EAAgBQ,QAAQ,GAC1CN,WAAaA,EAAWM,QAAQ,GAChCC,cAAepD,EAAWmD,QAAQ,GAClCJ,cACAG,YAAaA,EAAYC,QAAQ,GACjCE,UAAYX,GDPUY,CACdzC,EACAF,EACAd,EAAekB,GACfE,EACAE,GAGFV,EAAU+B,KA6Cce,GAAG,WAAjC,SACE,gCACA,oBAAItB,UAAU,UAAd,qBACE,iDAEE,yBACMsB,GAAG,cACHC,MAAOrC,EACPsC,SAAU,SAACC,GAAD,OAAOtC,EAAcsC,EAAEC,OAAOH,QAH9C,UAKE,wBAAQA,MAAM,SAAd,sBACA,wBAAQA,MAAM,cAAd,2BACA,wBAAQA,MAAM,UAAd,6BAIJ,mDAEE,uBACED,GAAG,YACHK,KAAK,SACLJ,MAAO7C,EACP8C,SAAU,SAACC,GAAD,OAAO9C,EAAe8C,EAAEC,OAAOH,QACzCK,YAAY,UACZC,UAAQ,OAIZ,sBAAMP,GAAG,mBAAmBtB,UAAU,aAAaI,MAAO,CAAEC,QAAS,QAArE,8CAEA,kDAEE,uBACEsB,KAAK,SACLJ,MAAO3C,EACP4C,SAAU,SAACC,GAAD,OAAO5C,EAAY4C,EAAEC,OAAOH,QACtCK,YAAY,aACZC,UAAQ,OAIZ,sBAAMP,GAAG,kBAAkBtB,UAAU,aAAaI,MAAO,CAAEC,QAAS,QAApE,8CAEA,sBAAKiB,GAAG,cAAclB,MAAO,CAAEC,QAAS,QAAxC,UACE,qDAEE,uBAAOsB,KAAK,SACVJ,MAAOvC,EACPwC,SAAU,SAACC,GAAD,OAAOxC,EAAiBwC,EAAEC,OAAOH,QAC3CK,YAAY,eAGhB,sBAAMN,GAAG,uBAAuBtB,UAAU,aAAaI,MAAO,CAAEC,QAAS,QAAzE,iDAGF,mDAEE,yBACEiB,GAAG,cACHC,MAAOzC,EACP0C,SAAU,SAACC,GACT1C,EAAgB4B,OAAOc,EAAEC,OAAOH,QAtEhB,MAAtBhC,EAAYgC,OAAuC,MAAtBhC,EAAYgC,MAC3CnC,EAAYgB,MAAMC,QAAU,QAE5BjB,EAAYgB,MAAMC,QAAU,QA+DxB,UAQE,8DACA,wBAAQkB,MAAM,IAAd,iCACA,wBAAQA,MAAM,IAAd,8EAGA,wBAAQA,MAAM,IAAd,uEAGA,wBAAQA,MAAM,IAAd,sEAGA,wBAAQA,MAAM,IAAd,yDAGA,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,mDAGJ,sBAAMD,GAAG,sBAAsBtB,UAAU,aAAaI,MAAO,CAAEC,QAAS,QAAxE,4CACA,cAACyB,EAAA,EAAD,CAASH,KAAK,SAASJ,MAAM,SAASQ,QAAQ,YAA9C,uBACA,cAACD,EAAA,EAAD,CAAQC,QAAQ,YAOhBC,QAnIY,WAEhBjD,EAAgB,IAChBJ,EAAe,IACfE,EAAY,IACZI,EAAiB,IACjBE,EAAc,UAGdK,EAAiBY,MAAMC,QAAU,OACjCX,EAAgBU,MAAMC,QAAU,OAChCT,EAAoBQ,MAAMC,QAAU,OACpCP,EAAqBM,MAAMC,QAAU,OACrCjB,EAAYgB,MAAMC,QAAU,OAY1B7B,EATgB,CACd4C,UAAW,EACXV,gBAAiB,EACjBS,cAAe,EACfP,WAAY,EACZK,YAAa,EACbJ,YAAa,KAsGb,2B,gCEjKOoB,MA7Cf,SAAgB1D,GAEd,IAAQ2D,EAAW3D,EAAX2D,OACFC,EAAcD,EAAOd,UAAYc,EAAOd,UAAUF,QAAQ,GAAK,IAErE,OACG,sBAAKlB,UAAU,SAAf,UACC,oBAAIA,UAAU,UAAd,mCACA,cAACoC,EAAA,EAAD,CAAOpC,UAAU,SAAU,aAAW,eAAtC,SACI,eAACqC,EAAA,EAAD,WACA,eAACC,EAAA,EAAD,WACG,eAACC,EAAA,EAAD,kCAAgCJ,EAAhC,iBACC,eAACI,EAAA,EAAD,CAAWC,MAAM,QAAjB,cACGN,EAAOxB,sBAGd,eAAC4B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,8DACA,eAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,cACMN,EAAOf,oBAGf,eAACmB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,wCAEA,eAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,cACIN,EAAOtB,iBAGb,eAAC0B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,2CACA,eAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,cACIN,EAAOjB,kBAEb,eAACqB,EAAA,EAAD,WAAU,cAACC,EAAA,EAAD,iCACR,eAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,cAA2BN,EAAOrB,2BC5B/B4B,MAVf,WACI,OACI,qBAAKzC,UAAU,SAAf,SAEI,+cCYG0C,MAZf,WACI,MAA4BjE,mBAAS,IAArC,mBAAOyD,EAAP,KAAe1D,EAAf,KACA,OACI,sBAAKwB,UAAU,cAAf,UACM,oBAAIA,UAAU,UAAd,2BACA,cAAC,EAAD,CAAMxB,UAAWA,IACnB,cAAC,EAAD,CAAQ0D,OAAQA,IAChB,cAAC,EAAD,QCRZS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxD,SAASC,eAAe,W","file":"static/js/main.0bef6f49.chunk.js","sourcesContent":["\r\n/// all \r\n\r\nexport const userCategories = [\r\n    {\r\n        catID: \"S1\",\r\n        catName : 'Single, no children',\r\n        maxPayment : 620.80,\r\n        incomeLimit: 1217.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60, // 1000 600 deduce\r\n    },\r\n      {\r\n        catID: \"S2\",\r\n        catName : 'Single,  NOT the principal carer of a dependent child or children',\r\n        maxPayment : 667.50,\r\n        incomeLimit: 1296.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"S3\",\r\n        catName : 'Single, 60 or older, after 9 continuous months on payment',\r\n        maxPayment : 667.50,\r\n        incomeLimit: 1306.34,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"S4\",\r\n        catName : 'Single,  principal carer of a dependent child or children',\r\n        maxPayment : 667.50,\r\n        incomeLimit: 1858.00,\r\n        bracketOne : .40,  \r\n        bracketTwo : .40, // 1000 400 deduced \r\n    },\r\n    {\r\n        catID: \"S5\",\r\n        catName : 'Single principal carer granted an exemption',\r\n        maxPayment : 850.20,\r\n        incomeLimit: 2321.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"P1\",\r\n        catName : 'Partnered',\r\n        maxPayment : 565.40,\r\n        incomeLimit: 1123.17,\r\n        partnerLimit: 2079.50,        \r\n        partnerBracket : 1124.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"P2\",\r\n        catName : 'Partnered, Partner with pension',\r\n        maxPayment : 565.40,\r\n        incomeLimit: 1123.17,\r\n        partnerLimit: 2079.50,        \r\n        combinedLimit: 2246.34,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n];\r\n\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { incomeCalc } from \"./incomeCalc\";\r\nimport { userCategories } from \"./govTables.js\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\nexport function Form(props) {\r\n  const { setResult } = props;\r\n  const [hoursWorked, setHoursWorked] = useState(\"\");\r\n  const [hourRate, setHourRate] = useState(\"\");\r\n  const [userCategory, setUserCategory] = useState(\"\");\r\n  const [partnerIncome, setPartnerIncome] = useState(\"\");\r\n  const [timePeriod, setTimePeriod] = useState(\"weekly\");\r\n\r\n  const hiddenField = document.getElementById(\"hiddenInput\");\r\n  const selectField = document.getElementById(\"selectField\");\r\n\r\n  const hoursWorkWarning = document.getElementById(\"hoursWorkWarning\");\r\n  let hoursWorkBool = false;\r\n  const hourRateWarning = document.getElementById(\"hourRateWarning\");\r\n  let hourRateBool = false;\r\n  const userCategoryWarning = document.getElementById(\"userCategoryWarning\");\r\n  let userCategoryWarningBool = false;\r\n  const partnerIncomeWarning = document.getElementById(\"partnerIncomeWarning\");\r\n  let partnerIncomeWarningBool = true;\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    \r\n    // validation for the hours worked input\r\n    if(hoursWorked < 1){\r\n        hoursWorkWarning.style.display = \"block\";\r\n        hoursWorkBool = false;\r\n      } else{\r\n        hoursWorkWarning.style.display = \"none\";\r\n        hoursWorkBool = true;\r\n      }\r\n\r\n    // validation for the hours rate input\r\n      if(hourRate < 1){\r\n        hourRateWarning.style.display = \"block\";\r\n        hourRateBool = false;\r\n      } else{\r\n        hourRateWarning.style.display = \"none\";\r\n        hourRateBool = true;\r\n      }\r\n      \r\n      // validation for the user category\r\n      const userCatValus = [0, 1, 2, 3, 4, 5, 6];\r\n\r\n      if(!userCatValus.includes(userCategory)){\r\n        userCategoryWarning.style.display = \"block\";\r\n        userCategoryWarningBool = false;\r\n      } else{\r\n        userCategoryWarning.style.display = \"none\";\r\n        userCategoryWarningBool = true;\r\n      }\r\n\r\n      // validation for the partner income \r\n       if(userCategory === 5 || userCategory === 6){\r\n         partnerIncomeWarningBool = false;\r\n         if(partnerIncome < 1){\r\n            partnerIncomeWarning.style.display = \"block\";\r\n            partnerIncomeWarningBool = false;\r\n         }else{\r\n            partnerIncomeWarning.style.display = \"none\";\r\n            partnerIncomeWarningBool = true;\r\n         }\r\n       }\r\n\r\n    //check if all the required fields are vilid before strating the calculation\r\n    if(hoursWorkBool && hourRateBool && userCategoryWarningBool && partnerIncomeWarningBool){\r\n        const finalCalc = incomeCalc(\r\n            hourRate,\r\n            hoursWorked,\r\n            userCategories[userCategory],\r\n            partnerIncome,\r\n            timePeriod\r\n          );\r\n          \r\n          setResult(finalCalc);\r\n    }\r\n     \r\n  };\r\n\r\n  // function to reset the form's fields\r\n  const formReset = () => {\r\n    // reset fields\r\n    setUserCategory(\"\");\r\n    setHoursWorked(\"\");\r\n    setHourRate(\"\");\r\n    setPartnerIncome(\"\");\r\n    setTimePeriod(\"weekly\");\r\n\r\n    // reset the warning spans \r\n    hoursWorkWarning.style.display = \"none\";\r\n    hourRateWarning.style.display = \"none\";\r\n    userCategoryWarning.style.display = \"none\";\r\n    partnerIncomeWarning.style.display = \"none\";\r\n    hiddenField.style.display = \"none\";\r\n\r\n    // reset the result's values\r\n    let resetValues = { \r\n        workHours: 0,\r\n        workIncomeTotal: 0,\r\n        maxGovPayment: 0,\r\n        deductions: 0,\r\n        finalGovPay: 0,\r\n        totalIncome: 0\r\n    }\r\n      \r\n      setResult(resetValues);\r\n  }\r\n\r\n  // function to show the Partner income field when one of the partner options are selected\r\n  const ShowHideDiv = () => {\r\n    if (selectField.value === \"5\" || selectField.value === \"6\") {\r\n      hiddenField.style.display = \"block\";\r\n    } else {\r\n      hiddenField.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form\">\r\n    <form onSubmit={handleSubmit} id=\"userForm\" >\r\n      <div>\r\n      <h2 className=\"_titles\"> INPUT </h2>\r\n        <label>\r\n          Time Period:\r\n          <select\r\n                id=\"time_period\"\r\n                value={timePeriod}\r\n                onChange={(e) => setTimePeriod(e.target.value)}>\r\n             \r\n            <option value=\"weekly\"> Weekly </option>\r\n            <option value=\"fortnightly\"> Fortnightly </option>\r\n            <option value=\"monthly\"> Monthly </option>\r\n          </select>\r\n          </label>\r\n         \r\n        <label>\r\n          Hours Worked :\r\n          <input\r\n            id=\"hoursWork\"\r\n            type=\"number\"\r\n            value={hoursWorked}\r\n            onChange={(e) => setHoursWorked(e.target.value)}\r\n            placeholder=\"e.g. 20\"\r\n            required\r\n          />\r\n          \r\n        </label>\r\n        <span id=\"hoursWorkWarning\" className=\"validation\" style={{ display: \"none\" }}>Please insert a positive number.</span>\r\n\r\n        <label>\r\n          Hourly Rate :\r\n          <input\r\n            type=\"number\"\r\n            value={hourRate}\r\n            onChange={(e) => setHourRate(e.target.value)}\r\n            placeholder=\"e.g. 20.33\"\r\n            required\r\n          />\r\n         \r\n        </label>\r\n        <span id=\"hourRateWarning\" className=\"validation\" style={{ display: \"none\" }}>Please insert a positive number.</span>\r\n\r\n        <div id=\"hiddenInput\" style={{ display: \"none\" }}>\r\n          <label>\r\n            Partners Income:\r\n            <input type=\"number\" \r\n              value={partnerIncome}\r\n              onChange={(e) => setPartnerIncome(e.target.value)}\r\n              placeholder=\"e.g. 20\"\r\n             />\r\n          </label>\r\n          <span id=\"partnerIncomeWarning\" className=\"validation\" style={{ display: \"none\" }}>Please insert a positive number.</span>\r\n        </div>\r\n\r\n        <label>\r\n          User Category:\r\n          <select\r\n            id=\"selectField\"\r\n            value={userCategory}\r\n            onChange={(e) => {\r\n              setUserCategory(Number(e.target.value));\r\n              ShowHideDiv();\r\n            }}\r\n          >\r\n            <option >Please select a category</option>\r\n            <option value=\"0\">Single, no children</option>\r\n            <option value=\"1\">\r\n              Single, NOT the principal carer of a dependent child or children\r\n            </option>\r\n            <option value=\"2\">\r\n              Single, 60 or older, after 9 continuous months on payment\r\n            </option>\r\n            <option value=\"3\">\r\n              Single, principal carer of a dependent child or children\r\n            </option>\r\n            <option value=\"4\">\r\n              Single principal carer granted an exemption\r\n            </option>\r\n            <option value=\"5\">Partnered</option>\r\n            <option value=\"6\">Partnered, Partner with pension</option>\r\n          </select>\r\n        </label>\r\n        <span id=\"userCategoryWarning\" className=\"validation\" style={{ display: \"none\" }}>Please select a valid catgory.</span>\r\n        <Button  type=\"submit\" value=\"Submit\" variant=\"contained\">Calculate</Button>\r\n        <Button variant=\"contained\"\r\n        // onClick={()=>{setHoursWorked(\"\");\r\n        //                       setHourRate(\"\");\r\n        //                       setPartnerIncome(\"\");\r\n        //                       setUserCategory(\"\");\r\n        //                       setTimePeriod(\"\");}}>Reset</Button>\r\n\r\n        onClick={formReset}>Reset</Button>\r\n       \r\n      </div>\r\n    </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","// we should do all the calculations by week, then if timePeriod changes, we mutiply\r\n// this function should take:, userCategories, userRate, userHours, and a default partnerIncome\r\n\r\nexport const incomeCalc = (userRate, userHours =1, userCategories, partnerIncome =0, timePeriod) => {\r\n\r\n//all the calculation are made weekly. At the end of the function the values are multiplied in case of different timePeriod\r\n  let bracketOne = userCategories.bracketOne;\r\n  let bracketTwo = userCategories.bracketTwo;\r\n  let incomeLimit = (userCategories.incomeLimit );\r\n  let combinedLimit = (userCategories.combinedLimit);\r\n  let partnerLimit = (userCategories.partnerLimit);\r\n  let maxPayment = (userCategories.maxPayment);\r\n\r\n  if(timePeriod === \"weekly\"){\r\n    userHours *= 2;\r\n  } else if (timePeriod === \"monthly\"){\r\n    userHours /= 2.16;\r\n  }\r\n\r\n  // variables to be returned:\r\n  let workIncomeTotal = Number(userRate * userHours);\r\n  let deductions = 0;\r\n\r\n  let threshold1 = 0; // how much money he made between 150 to 256\r\n  let threshold2 = 0; // between 256 to max\r\n\r\n  if (workIncomeTotal > incomeLimit || // user exceeds limit\r\n    partnerIncome > partnerLimit || // partner exceeds limit\r\n    (workIncomeTotal+partnerIncome > combinedLimit) // combined exceeds limit\r\n    ) { \r\n    deductions = maxPayment;\r\n  } else if (workIncomeTotal < incomeLimit) {\r\n      // deduction from 0 to 150\r\n    if (workIncomeTotal < 150) {\r\n      deductions = 0;\r\n    } else if (workIncomeTotal > 150 && workIncomeTotal < 257) {\r\n      // deduction from 150 to 256\r\n      threshold1 = ((workIncomeTotal - 150) * bracketOne); // how much money he made between 150 to 256\r\n      deductions = threshold1;\r\n    } else if (workIncomeTotal > 256 && workIncomeTotal < incomeLimit) {\r\n      // deduction from 256 to incomeLimit\r\n      threshold2 = ((workIncomeTotal - 150 - 106) * bracketTwo);\r\n      deductions = (106 * bracketOne) + threshold2;\r\n    }\r\n    if(partnerIncome > 1124){\r\n      deductions =+ ((partnerIncome-1124)* .60);\r\n    };\r\n  }\r\n  let totalIncome = (workIncomeTotal + maxPayment - deductions);\r\n      \r\n  let averageWage = Math.round(totalIncome/userHours);\r\n  let finalGovPay= maxPayment - deductions;\r\n\r\n  //check the timePeriod and multiply the results in that case \r\n  // if(timePeriod === \"weekly\"){\r\n  //   totalIncome *= 2;\r\n  //   workIncomeTotal *= 2;\r\n  //   deductions *= 2;\r\n  //   maxPayment *= 2; \r\n  //   averageWage *= 2;\r\n  //   finalGovPay *= 2;\r\n  //   userHours *= 2;\r\n  // }\r\n  // if (timePeriod === \"monthly\"){\r\n  //   totalIncome *= 4.33;\r\n  //   workIncomeTotal *= 4.33;\r\n  //   deductions *= 4.33;\r\n  //   maxPayment *= 4.33; \r\n  //   averageWage *= 4.33;\r\n  //   finalGovPay *= 4.33;\r\n  //   userHours *= 4.33;\r\n  // }\r\n\r\n  let calculatedDisplay = {\r\n    totalIncome : totalIncome.toFixed(2),\r\n    workIncomeTotal : workIncomeTotal.toFixed(2),\r\n    deductions : deductions.toFixed(2),\r\n    maxGovPayment: maxPayment.toFixed(2),\r\n    averageWage,\r\n    finalGovPay :finalGovPay.toFixed(2),\r\n    workHours : userHours,\r\n  };\r\n\r\n  return calculatedDisplay;\r\n};\r\n","import React from \"react\";\r\nimport { Table, TableRow ,TableCell,TableBody } from '@material-ui/core';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nfunction Result(props) {\r\n  \r\n  const { result } = props;\r\n  const monthlyHours=(result.workHours ? result.workHours.toFixed(2) : '0' );\r\n\r\n  return (\r\n     <div className=\"result\">\r\n      <h2 className=\"_titles\"> FORTNIGHTLY RESULTS </h2>\r\n      <Table className=\"_table\"  aria-label=\"simple table\">\r\n          <TableBody>\r\n          <TableRow>\r\n             <TableCell>Income from working {monthlyHours} hours is :</TableCell>\r\n              <TableCell align=\"right\">\r\n               ${result.workIncomeTotal}\r\n              </TableCell>\r\n            </TableRow>\r\n          <TableRow>\r\n            <TableCell>The goverment payment max you could receive was</TableCell>\r\n            <TableCell align=\"right\">\r\n                ${result.maxGovPayment}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell> Gov payment deducted by:\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n              ${result.deductions}\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell> Final Gov payment received:</TableCell>\r\n            <TableCell align=\"right\">\r\n              ${result.finalGovPay}</TableCell>\r\n          </TableRow>\r\n          <TableRow><TableCell> Total income  is:</TableCell>\r\n            <TableCell align=\"right\">${result.totalIncome}</TableCell>\r\n          </TableRow>\r\n     \r\n        </TableBody>\r\n      </Table>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n       \r\n            <p>The content of this website is provided for informational purposes only. It does not constitute legal advice and should not be relied upon as such. Please seek legal advice for any particular matters you have. Whilst we have taken all due care to provide correct information, the creators of this website do not accept any liability to anyone in relation to the use of, or reliance on, the information provided on this website.</p>\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from \"react\";\r\nimport Form from \"./components/Form\";\r\nimport Result from \"./components/Result\";\r\nimport Footer from './components/Footer';\r\nimport './index.css'\r\n\r\nfunction App() {\r\n    const [result, setResult] = useState({});\r\n    return (\r\n        <div className=\"page_design\" >\r\n              <h1 className=\"heading\"> INCOME CALC </h1>\r\n              <Form setResult={setResult} />\r\n            <Result result={result} />\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}