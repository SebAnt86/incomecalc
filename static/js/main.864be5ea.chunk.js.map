{"version":3,"sources":["components/govTables.js","components/Form.js","components/incomeCalc.js","components/Result.js","App.js","index.js"],"names":["userCategories","catID","catName","maxPayment","incomeLimit","bracketOne","bracketTwo","partnerLimit","partnerBracket","combinedLimit","Form","props","setResult","useState","hoursWorked","setHoursWorked","hourRate","setHourRate","userCategory","setUserCategory","onSubmit","evt","preventDefault","finalCalc","userRate","userHours","workIncomeTotal","Number","deductions","threshold2","toFixed","console","log","Math","round","totalIncome","averageWage","maxGovPayment","workHours","incomeCalc","id","type","value","onChange","e","target","placeholder","required","style","display","hiddenField","document","getElementById","selectField","ShowHideDiv","Result","result","App","className","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.864be5ea.chunk.js","sourcesContent":["\r\n/// all \r\n\r\nexport const userCategories = [\r\n    {\r\n        catID: \"S1\",\r\n        catName : 'Single, no children',\r\n        maxPayment : 620.80,\r\n        incomeLimit: 1217.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60, // 1000 600 deduce\r\n    },\r\n      {\r\n        catID: \"S2\",\r\n        catName : 'Single,  NOT the principal carer of a dependent child or children',\r\n        maxPayment : 667.50,\r\n        incomeLimit: 1296.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"S3\",\r\n        catName : 'Single, 60 or older, after 9 continuous months on payment',\r\n        maxPayment : 667.50,\r\n        incomeLimit: 1306.34,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"S4\",\r\n        catName : 'Single,  principal carer of a dependent child or children',\r\n        maxPayment : 667.50,\r\n        incomeLimit: 1858.00,\r\n        bracketOne : .40,  \r\n        bracketTwo : .40, // 1000 400 deduced \r\n    },\r\n    {\r\n        catID: \"S5\",\r\n        catName : 'Single principal carer granted an exemption',\r\n        maxPayment : 850.20,\r\n        incomeLimit: 2321.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"P1\",\r\n        catName : 'Partnered',\r\n        maxPayment : 565.40,\r\n        incomeLimit: 1123.17,\r\n        partnerLimit: 2079.50,        \r\n        partnerBracket : 1124.00,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n    {\r\n        catID: \"P2\",\r\n        catName : 'Partnered, Partner with pension',\r\n        maxPayment : 565.40,\r\n        incomeLimit: 1123.17,\r\n        partnerLimit: 2079.50,        \r\n        combinedLimit: 2246.34,\r\n        bracketOne : .50,  \r\n        bracketTwo : .60,\r\n    },\r\n];\r\n\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { incomeCalc } from \"./incomeCalc\";\r\nimport { userCategories } from \"./govTables.js\";\r\n\r\nexport function Form(props) {\r\n  const { setResult } = props;\r\n  const [hoursWorked, setHoursWorked] = useState(\"\");\r\n  const [hourRate, setHourRate] = useState(\"\");\r\n  const [userCategory, setUserCategory] = useState(\"\");\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const finalCalc = incomeCalc(\r\n      hourRate,\r\n      hoursWorked,\r\n      userCategories[userCategory]\r\n    );\r\n    setResult(finalCalc);\r\n    \r\n    \r\n     // reset the form \r\n    // setHoursWorked(\"\");\r\n    // setHourRate(\"\");\r\n    // setUserCategory(\"\");\r\n    // document.getElementById(\"userForm\").reset();\r\n  };\r\n  function ShowHideDiv(){\r\n    const hiddenField = document.getElementById(\"hiddenInput\");\r\n    const selectField = document.getElementById(\"selectField\");\r\n    if(selectField.value === \"5\" || selectField.value === \"6\"){\r\n      hiddenField.style.display = \"block\";\r\n    }\r\n    else{\r\n      hiddenField.style.display = \"none\";\r\n    }\r\n   // hiddenField.style.display = selectField.value === \"5\" ? \"block\" : \"none\";\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit} id=\"userForm\">\r\n      <div>\r\n        <h3> USER INPUT </h3>\r\n        <label>\r\n          \r\n          Hours Worked:\r\n          <input\r\n            type=\"number\"\r\n            value={hoursWorked}\r\n            onChange={(e) => setHoursWorked(e.target.value)}\r\n            placeholder=\"ex. 20\"\r\n            required\r\n          />\r\n          <br />\r\n        </label>\r\n\r\n        <label>\r\n          \r\n          Hourly Rate:\r\n          <input\r\n            type=\"number\"\r\n            value={hourRate}\r\n            onChange={(e) => setHourRate(e.target.value)}\r\n            placeholder=\"ex. 20\"\r\n            required\r\n          />\r\n          <br />\r\n        </label>\r\n        <div id=\"hiddenInput\" style={{display: \"none\"}}>\r\n        <label >\r\n          \r\n          Partners Income:\r\n          <input\r\n            type=\"number\"\r\n          />\r\n          <br />\r\n        </label>\r\n        </div>\r\n        \r\n\r\n        <label>\r\n          \r\n          User Category:\r\n          <select id = \"selectField\" onChange={(e) => {setUserCategory(Number(e.target.value)); ShowHideDiv();}}>\r\n            <option>Please select a category</option>\r\n            <option value=\"0\">Single, no children</option>\r\n            <option value=\"1\">\r\n              Single, NOT the principal carer of a dependent child or children\r\n            </option>\r\n            <option value=\"2\">\r\n              Single, 60 or older, after 9 continuous months on payment\r\n            </option>\r\n            <option value=\"3\">\r\n              Single, principal carer of a dependent child or children\r\n            </option>\r\n            <option value=\"4\">\r\n              Single principal carer granted an exemption\r\n            </option>\r\n            <option value=\"5\">Partnered</option>\r\n            <option value=\"6\">Partnered, Partner with pension</option>\r\n          </select>\r\n        </label>\r\n\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","// we should do all the calculations by week, then if timePeriod changes, we mutiply\r\n// this function should take:, userCategories, userRate, userHours, and a default partnerIncome\r\n\r\nexport const incomeCalc = (userRate, userHours =1, userCategories) => {\r\n  // variables to be returned:\r\n  let workIncomeTotal = Number(userRate * userHours);\r\n  let deductions = 0;\r\n\r\n  let threshold1 = Number(((workIncomeTotal - 150) * userCategories.bracketOne).toFixed(2)); // how much money he made between 150 to 256\r\n  let threshold2 = 0; // between 256 to max\r\n\r\n  if (workIncomeTotal > userCategories.incomeLimit) {\r\n    //<-- if total income higher than limit\r\n    deductions = userCategories.maxPayment;\r\n  } else if (workIncomeTotal < userCategories.incomeLimit) {\r\n      // deduction from 0 to 150\r\n    if (workIncomeTotal < 150) {\r\n      deductions = 0;\r\n    } else if (workIncomeTotal > 150 && workIncomeTotal < 257) {\r\n      // deduction from 150 to 256\r\n      threshold1 = ((workIncomeTotal - 150) * userCategories.bracketOne); // how much money he made between 150 to 256\r\n      deductions = threshold1;\r\n    } else if (workIncomeTotal > 256 && workIncomeTotal < userCategories.incomeLimit) {\r\n      // deduction from 256 to incomeLimit\r\n      threshold2 = ((workIncomeTotal - 150 - 106) * userCategories.bracketTwo);\r\n    \r\n      console.log(\"threshold2:\" + threshold2);\r\n                        // .60 // 1080 - 150 = (930 - 557 ) ((63)+494)  ==    \r\n                        // .40 // 1080 - 150 = (930 - 371 ) ((42)+329) == \r\n      deductions = Math.round((106 * userCategories.bracketOne) + threshold2);\r\n    }\r\n  }\r\n  let totalIncome = (workIncomeTotal + userCategories.maxPayment - deductions);\r\n      \r\n  let averageWage = Math.round(totalIncome/userHours);\r\n  \r\n\r\n  let calculatedDisplay = {\r\n    totalIncome,\r\n    workIncomeTotal,\r\n    deductions,\r\n    maxGovPayment: (userCategories.maxPayment),\r\n    averageWage,\r\n    workHours : userHours,\r\n  };\r\n\r\n  return calculatedDisplay;\r\n};\r\n","import React from \"react\";\r\n\r\nfunction Result(props) {\r\n  const { result } = props;\r\n  // if (!result) {\r\n  //   return <div> EMPTY </div>;\r\n  // }\r\n  return (\r\n    <div>\r\n      <h1> RESULT </h1>\r\n      <div>\r\n        <p> Income from working: {result.workHours} hours is ${result.workIncomeTotal} </p>\r\n        <p> The goverment payment max you could receive was ${result.maxGovPayment} </p>\r\n        <p> Gov payment deducted by:  ${result.deductions} </p>\r\n        <p> Final Gov payment received:  ${(result.maxGovPayment - result.deductions).toFixed(2)} </p>\r\n        <p> Total income  is ${result.totalIncome} </p>\r\n     \r\n        <p> Your average wage after deduction is  {result.averageWage} </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"./components/Form\";\r\nimport Result from \"./components/Result\";\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState({});\r\n  return (\r\n    <div className=\"App\">\r\n      <h1> INCOME CALC</h1>\r\n      <Form setResult={setResult} />\r\n   \r\n      <Result result={result} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}